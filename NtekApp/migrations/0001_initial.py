# Generated by Django 4.1.7 on 2023-08-29 11:24

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BillAble',
            fields=[
                ('BAID', models.AutoField(primary_key=True, serialize=False)),
                ('Billable', models.CharField(max_length=255, verbose_name='Bill Able')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('CityID', models.AutoField(primary_key=True, serialize=False)),
                ('CityName', models.CharField(max_length=125, verbose_name='City Name')),
            ],
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('ClassID', models.AutoField(primary_key=True, serialize=False)),
                ('ClassName', models.CharField(max_length=255, verbose_name='Class Name')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('ClientID', models.AutoField(primary_key=True, serialize=False)),
                ('CompanyName', models.CharField(max_length=255, verbose_name='Company Name')),
                ('Address1', models.CharField(max_length=500, verbose_name='Address1')),
                ('Address2', models.CharField(max_length=500, verbose_name='Address2')),
                ('City', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.city', verbose_name='City')),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('ContractID', models.AutoField(primary_key=True, serialize=False)),
                ('ContractNo', models.CharField(max_length=255, verbose_name='Contract No')),
                ('ContractName', models.CharField(max_length=500, verbose_name='Contract Name')),
                ('ClientRefNo', models.CharField(max_length=255, verbose_name='Client Ref No')),
                ('Description', models.TextField()),
                ('StartDate', models.DateTimeField(blank=True, null=True, verbose_name='Start Date')),
                ('EndDate', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
            ],
        ),
        migrations.CreateModel(
            name='ContractSLA',
            fields=[
                ('SLAID', models.AutoField(primary_key=True, serialize=False)),
                ('ContractSLA', models.CharField(max_length=500, verbose_name='Contract SLA')),
            ],
        ),
        migrations.CreateModel(
            name='ContractStatus',
            fields=[
                ('CSID', models.AutoField(primary_key=True, serialize=False)),
                ('ContractStatus', models.CharField(max_length=500, verbose_name='Contract Status')),
            ],
        ),
        migrations.CreateModel(
            name='ContractType',
            fields=[
                ('CTID', models.AutoField(primary_key=True, serialize=False)),
                ('ContractType', models.CharField(max_length=500, verbose_name='Contract Type')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('CountryID', models.AutoField(primary_key=True, serialize=False)),
                ('CountryName', models.CharField(max_length=125, verbose_name='Country Name')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerCategory',
            fields=[
                ('CustCatID', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=125, verbose_name='Customer Category Name')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerType',
            fields=[
                ('CustTypeID', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=255, verbose_name='Customer Type')),
            ],
        ),
        migrations.CreateModel(
            name='EndClient',
            fields=[
                ('EndClientID', models.AutoField(primary_key=True, serialize=False)),
                ('CompanyName', models.CharField(max_length=255, verbose_name='Company Name')),
                ('Address1', models.CharField(max_length=500, verbose_name='Address1')),
                ('Address2', models.CharField(max_length=500, verbose_name='Address2')),
                ('City', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.city', verbose_name='City')),
                ('Country', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.country', verbose_name='Country')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NtekApp.client', verbose_name='Client')),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('ExpenseID', models.AutoField(primary_key=True, serialize=False)),
                ('Expense', models.CharField(blank=True, max_length=255, null=True, verbose_name='Expense')),
            ],
        ),
        migrations.CreateModel(
            name='FEStatus',
            fields=[
                ('FEID', models.AutoField(primary_key=True, serialize=False)),
                ('FEStatus', models.CharField(max_length=255, verbose_name='Field Engineer Status')),
            ],
        ),
        migrations.CreateModel(
            name='FieldEngineer',
            fields=[
                ('FEID', models.AutoField(primary_key=True, serialize=False)),
                ('EmployeeID', models.CharField(max_length=255, verbose_name='Employee ID')),
                ('FirstName', models.CharField(max_length=255, verbose_name='First Name')),
                ('LastName', models.CharField(max_length=255, verbose_name='Last Name')),
                ('Email', models.CharField(max_length=255, verbose_name='Email')),
                ('Mobile', models.CharField(max_length=255, verbose_name='Mobile')),
                ('City', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.city', verbose_name='City')),
                ('Country', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.country', verbose_name='Country')),
            ],
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('OptionID', models.AutoField(primary_key=True, serialize=False)),
                ('OptionName', models.CharField(max_length=255, verbose_name='Option Name')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('ProductCategoryID', models.AutoField(primary_key=True, serialize=False)),
                ('ProductCategoryName', models.CharField(max_length=255, verbose_name='Product Category Name')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('ProjectID', models.AutoField(primary_key=True, serialize=False)),
                ('ProjectName', models.CharField(max_length=500, verbose_name='Project Name')),
                ('ClientRefNo', models.CharField(max_length=255, verbose_name='Client Ref No')),
                ('Description', models.TextField()),
                ('StartDate', models.DateTimeField(verbose_name='Start Date')),
                ('EndDate', models.DateTimeField(verbose_name='End Date')),
                ('Client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.client', verbose_name='Client')),
                ('EndClient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.endclient', verbose_name='End Client')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectStatus',
            fields=[
                ('PSID', models.AutoField(primary_key=True, serialize=False)),
                ('ProjectStatus', models.CharField(max_length=255, verbose_name='Project Status')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('PTID', models.AutoField(primary_key=True, serialize=False)),
                ('ProjectType', models.CharField(max_length=255, verbose_name='Project Type')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('TID', models.AutoField(primary_key=True, serialize=False)),
                ('TicketScheduleDate', models.DateTimeField(blank=True, null=True, verbose_name='Ticket Schedule Date')),
                ('TicketCompletedDate', models.DateTimeField(blank=True, null=True, verbose_name='Ticket Completed Date')),
                ('Subject', models.TextField(verbose_name='Subject')),
                ('ReferenceNo', models.CharField(max_length=255, verbose_name='Reference No')),
                ('Billable', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.billable')),
                ('City', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.city', verbose_name='City')),
                ('Client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.client', verbose_name='Client')),
                ('Contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.contract', verbose_name='Contract')),
                ('Country', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.country', verbose_name='Country')),
                ('EndClient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.endclient', verbose_name='End Client')),
                ('Project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.project', verbose_name='Project')),
            ],
        ),
        migrations.CreateModel(
            name='TicketStatus',
            fields=[
                ('TSID', models.AutoField(primary_key=True, serialize=False)),
                ('TicketStatus', models.CharField(max_length=255, verbose_name='Ticekt Status')),
            ],
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('TTID', models.AutoField(primary_key=True, serialize=False)),
                ('TicketType', models.CharField(max_length=255, verbose_name='Ticket Type')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'HOD'), (2, 'STAFF'), (3, 'STUDENT')], default=1, max_length=50)),
                ('profile_pic', models.ImageField(upload_to='media/profile_pic')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='WorkActivity',
            fields=[
                ('WAID', models.AutoField(primary_key=True, serialize=False)),
                ('ActivityDate', models.DateTimeField(blank=True, null=True, verbose_name='Activity Date')),
                ('Description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('FEngg', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.fieldengineer', verbose_name='Field Engineer')),
                ('RemoteClient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.client', verbose_name='Remote Client')),
                ('Ticket', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.ticket', verbose_name='Ticket No')),
            ],
        ),
        migrations.CreateModel(
            name='TicketSubType',
            fields=[
                ('TSTID', models.AutoField(primary_key=True, serialize=False)),
                ('TicketSubType', models.CharField(max_length=255, verbose_name='Ticket Sub Type')),
                ('TicketType', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.tickettype', verbose_name='Ticket Type')),
            ],
        ),
        migrations.CreateModel(
            name='TicketStatusHistory',
            fields=[
                ('TSHID', models.AutoField(primary_key=True, serialize=False)),
                ('HistoryDate', models.DateTimeField(verbose_name='History Date')),
                ('Status', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.ticketstatus', verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='TicketInternalNotes',
            fields=[
                ('TINID', models.AutoField(primary_key=True, serialize=False)),
                ('Date', models.DateTimeField(verbose_name='Date')),
                ('Notes', models.TextField(verbose_name='Notes')),
                ('FieldEngineer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.fieldengineer', verbose_name='Field Engineer')),
                ('TicketNo', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.ticket', verbose_name='Ticket No')),
            ],
        ),
        migrations.CreateModel(
            name='TicketExternalNotes',
            fields=[
                ('TENID', models.AutoField(primary_key=True, serialize=False)),
                ('Date', models.DateTimeField(verbose_name='Date')),
                ('Notes', models.TextField(verbose_name='Notes')),
                ('FieldEngineer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.fieldengineer', verbose_name='Field Engineer')),
                ('TicketNo', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.ticket', verbose_name='Ticket No')),
            ],
        ),
        migrations.CreateModel(
            name='TicketExpenses',
            fields=[
                ('TEID', models.AutoField(primary_key=True, serialize=False)),
                ('ExpenseDate', models.DateTimeField(verbose_name='Expense Date')),
                ('Currency', models.CharField(max_length=255, verbose_name='Currency')),
                ('Amount', models.DecimalField(decimal_places=2, max_digits=255, verbose_name='Amount')),
                ('ExpenseReason', models.TextField(verbose_name='Expense Reason')),
                ('FieldEngineer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.fieldengineer', verbose_name='Field Engineer')),
                ('TicketNo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.ticket', verbose_name='Ticket No')),
            ],
        ),
        migrations.CreateModel(
            name='TicketAgainstFE',
            fields=[
                ('TAFEID', models.AutoField(primary_key=True, serialize=False)),
                ('Email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('Mobile', models.CharField(blank=True, max_length=255, null=True, verbose_name='Mobile')),
                ('Description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('FEngineer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.fieldengineer', verbose_name='Field Engineer')),
                ('Ticket', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.ticket', verbose_name='Ticket No')),
            ],
        ),
        migrations.CreateModel(
            name='TicketActionHistory',
            fields=[
                ('TAHID', models.AutoField(primary_key=True, serialize=False)),
                ('ActionTime', models.DateTimeField(verbose_name='Action Time')),
                ('Action', models.TextField(verbose_name='Action')),
                ('FieldEngineer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.fieldengineer', verbose_name='Field Engineer')),
                ('TicketNo', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.ticket', verbose_name='Ticket No')),
            ],
        ),
        migrations.AddField(
            model_name='ticket',
            name='TicketType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.tickettype', verbose_name='Ticket Type'),
        ),
        migrations.CreateModel(
            name='TickeAdminStatus',
            fields=[
                ('TASID', models.AutoField(primary_key=True, serialize=False)),
                ('StatusDate', models.DateTimeField(blank=True, null=True, verbose_name='Status Date')),
                ('Description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('Ticket', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.ticket', verbose_name='Ticket')),
                ('TicketStatus', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.ticketstatus', verbose_name='Ticket Status')),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('ProvinceID', models.AutoField(primary_key=True, serialize=False)),
                ('ProvinceName', models.CharField(max_length=255, verbose_name='Province Name')),
                ('Country', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.country', verbose_name='Country Name')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectSubType',
            fields=[
                ('PSTID', models.AutoField(primary_key=True, serialize=False)),
                ('ProjectSubType', models.CharField(max_length=500, verbose_name='Project Sub Type')),
                ('ProjectType', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.projecttype', verbose_name='Project Type')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='ProjectStauts',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.projectstatus', verbose_name='Project Status'),
        ),
        migrations.AddField(
            model_name='project',
            name='ProjectType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.projecttype', verbose_name='Project Type'),
        ),
        migrations.CreateModel(
            name='FEWork',
            fields=[
                ('FEWID', models.AutoField(primary_key=True, serialize=False)),
                ('WorkDate', models.DateTimeField(blank=True, null=True, verbose_name='Work Date')),
                ('Kilometer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kilometer')),
                ('FEngg', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.fieldengineer', verbose_name='Field Engineer')),
                ('FStatus', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.festatus', verbose_name='Field Engineer Status')),
                ('Ticket', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.ticket', verbose_name='Ticket')),
            ],
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('CustomerID', models.AutoField(primary_key=True, serialize=False)),
                ('CustomerName', models.CharField(max_length=255, verbose_name='Customer Name')),
                ('ContactPerson', models.CharField(max_length=255, verbose_name='Contact Person')),
                ('Designation', models.CharField(blank=True, max_length=255, verbose_name='Customer Designation')),
                ('Name', models.CharField(max_length=255, verbose_name='Name')),
                ('Email', models.EmailField(max_length=254, unique=True)),
                ('PhoneNo', models.CharField(max_length=255, verbose_name='Phone Number')),
                ('WhatsAppNo', models.CharField(blank=True, max_length=255, verbose_name='WhatsApp Number')),
                ('Address', models.TextField(verbose_name='Address')),
                ('Agents', models.CharField(blank=True, max_length=255, verbose_name='Agent')),
                ('OpeningBalance', models.BigIntegerField(verbose_name='Opening Balance')),
                ('CreditLimit', models.BigIntegerField(verbose_name='Credit Limit')),
                ('City', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.city', verbose_name='City')),
                ('CustomerCategory', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.customercategory', verbose_name='Customer Category')),
                ('CustomerType', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.customertype', verbose_name='Customer Type')),
                ('Province', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.province', verbose_name='Province Name')),
            ],
        ),
        migrations.CreateModel(
            name='ContractSubType',
            fields=[
                ('CSTID', models.AutoField(primary_key=True, serialize=False)),
                ('ContractSubType', models.CharField(max_length=500, verbose_name='Contract Sub Type')),
                ('ContratctType', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.contracttype', verbose_name='Contract Sub Type')),
            ],
        ),
        migrations.AddField(
            model_name='contract',
            name='CStatus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.contractstatus', verbose_name='Contract Status'),
        ),
        migrations.AddField(
            model_name='contract',
            name='Client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.client', verbose_name='Client'),
        ),
        migrations.AddField(
            model_name='contract',
            name='ContractSLA',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.contractsla', verbose_name='Contract SLA'),
        ),
        migrations.AddField(
            model_name='contract',
            name='ContractType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.contracttype', verbose_name='Contract Type'),
        ),
        migrations.AddField(
            model_name='contract',
            name='EndClient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.endclient', verbose_name='End Client'),
        ),
        migrations.AddField(
            model_name='client',
            name='Country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.country', verbose_name='Country'),
        ),
        migrations.AddField(
            model_name='city',
            name='Province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.province', verbose_name='Province Name'),
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('AreaID', models.AutoField(primary_key=True, serialize=False)),
                ('AreaName', models.CharField(max_length=255, verbose_name='Area Name')),
                ('City', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='NtekApp.city', verbose_name='City Name')),
            ],
        ),
    ]
